server:
  port: 8080
spring:
  application:
    name: demo-sys
  profiles:
    active: dev
  datasource:
    druid:
      username: root
      password: 123456
      # 初始化大小，最小，最大
      initial-size: 1
      min-idle: 3
      max-active: 20
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 30000
      validation-query: select 'x'
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      stat-view-servlet.url-pattern: /druid/*
      stat-view-servlet.reset-enable: false
      stat-view-servlet.login-username: admin
      stat-view-servlet.login-password: admin123
      aop-patterns: com.enterprise.demo.*.service.*

  redis:
      host: 192.168.196.128
      database: 0

  mail:
    host: smtp.exmail.qq.com
    username: jinzhengang@qianbao.com
    password: Aiqun618
    properties:
      mail:
        smtp:
          auth: true
          timeout: 25000
    from: jinzhengang@qianbao.com

mybatis-plus:
  mapper-locations: classpath:mapper/*Mapper.xml
  typeAliasesPackage: com.enterprise.demo.sys.entity
  global-config:
    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID"
    id-type: 0
    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
    field-strategy: 1
    db-column-underline: true
    #刷新mapper 调试神器
    #refresh-mapper: true
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

log:
  path: /temp/logs

---
#dev
spring:
  profiles: dev
  datasource:
    druid:
      url: jdbc:mysql://192.168.196.128:3306/sys?useUnicode=true&characterEncoding=utf8
log:
  level: debug

---
#test
spring:
  profiles: test
  datasource:
   druid:
    url:
log:
  level: info

---
#prod
spring:
  profiles: prod
  datasource:
   druid:
      url:
log:
  level: info


